# Github Repository Actions 페이지에 나타낼 이름
name: Deploy costarica-api

# event trigger
on:
  workflow_dispatch:
  # push:
  #  branches:
  #    - develop

permissions:
  contents: read

# jobs의 속성 아래 hash table 형태로 작업내용을 정의 (hash table의 키 값은 적절한 key 값으로 설정)
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    ## GitHub-Actionsjdk setting
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: 'gradle'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
      
    # Caching dependencies
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: | 
          ${{ runner.os }}-gradle-

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash

#    - name: Test with Gradle # test application build
#      run: ./gradlew test

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./web.zip ./deploy

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \ 
        ./web.zip s3://costarica-deploy/
